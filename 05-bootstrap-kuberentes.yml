---
- name: Bootstrap Kubernetes Control Plane
  hosts: masters
  become: yes

  vars:
    pod_cidr: "10.244.0.0/16"
    service_cidr: "10.96.0.0/16"

  tasks:
    - name: Download Kubernetes binaries
      shell: |
        wget -q --show-progress --https-only --timestamping \
          "https://storage.googleapis.com/kubernetes-release/release/v1.24.3/bin/linux/amd64/kube-apiserver" \
          "https://storage.googleapis.com/kubernetes-release/release/v1.24.3/bin/linux/amd64/kube-controller-manager" \
          "https://storage.googleapis.com/kubernetes-release/release/v1.24.3/bin/linux/amd64/kube-scheduler" \
          "https://storage.googleapis.com/kubernetes-release/release/v1.24.3/bin/linux/amd64/kubectl"
    
    - name: Install Kubernetes binaries
      shell: |
        chmod +x kube-apiserver kube-controller-manager kube-scheduler kubectl
        sudo cp kube-apiserver kube-controller-manager kube-scheduler kubectl /usr/local/bin/

    - name: Create Kubernetes data directory
      file:
        path: /var/lib/kubernetes/pki
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Copy CA keys
      copy:
        src: "{{ item }}"
        dest: /var/lib/kubernetes/pki/
        owner: root
        group: root
        mode: '0600'
      with_items:
        - /home/pawel/ca.crt
        - /home/pawel/ca.key

    - name: Move certificate files to Kubernetes directory
      shell: |
        for c in kube-apiserver service-account apiserver-kubelet-client etcd-server kube-scheduler kube-controller-manager; do
          sudo cp "/etc/kubernetes/pki/$c.crt" "/etc/kubernetes/pki/$c.key" /var/lib/kubernetes/pki/
        done

    - name: Set ownership and permissions for Kubernetes pki files
      file:
        path: /var/lib/kubernetes/pki/
        owner: root
        group: root
        mode: '0600'

    - name: Set internal IP address
      set_fact:
        INTERNAL_IP: "{{ lookup('pipe', \"ip addr show ens32 | grep 'inet ' | awk '{print $2}' | cut -d '/' -f 1\") }}"

    - name: Set load balancer IP address
      set_fact:
        LOADBALANCER: "{{ lookup('pipe', 'dig +short loadbalancer') }}"

    - name: Set master node IP addresses
      set_fact:
        MASTER_1: "{{ lookup('pipe', 'dig +short master-1') }}"
        MASTER_2: "{{ lookup('pipe', 'dig +short master-2') }}"

    - name: Create kube-apiserver systemd service file
      copy:
        dest: /etc/systemd/system/kube-apiserver.service
        content: |
          [Unit]
          Description=Kubernetes API Server
          Documentation=https://github.com/kubernetes/kubernetes

          [Service]
          ExecStart=/usr/local/bin/kube-apiserver \
            --advertise-address={{ INTERNAL_IP }} \
            --allow-privileged=true \
            --apiserver-count=2 \
            --audit-log-maxage=30 \
            --audit-log-maxbackup=3 \
            --audit-log-maxsize=100 \
            --audit-log-path=/var/log/audit.log \
            --authorization-mode=Node,RBAC \
            --bind-address=0.0.0.0 \
            --client-ca-file=/var/lib/kubernetes/pki/ca.crt \
            --enable-admission-plugins=NodeRestriction,ServiceAccount \
            --enable-bootstrap-token-auth=true \
            --etcd-cafile=/var/lib/kubernetes/pki/ca.crt \
            --etcd-certfile=/var/lib/kubernetes/pki/etcd-server.crt \
            --etcd-keyfile=/var/lib/kubernetes/pki/etcd-server.key \
            --etcd-servers=https://{{ MASTER_1 }}:2379,https://{{ MASTER_2 }}:2379 \
            --event-ttl=1h \
            --encryption-provider-config=/var/lib/kubernetes/encryption-config.yaml \
            --kubelet-certificate-authority=/var/lib/kubernetes/pki/ca.crt \
            --kubelet-client-certificate=/var/lib/kubernetes/pki/apiserver-kubelet-client.crt \
            --kubelet-client-key=/var/lib/kubernetes/pki/apiserver-kubelet-client.key \
            --runtime-config=api/all=true \
            --service-account-key-file=/var/lib/kubernetes/pki/service-account.crt \
            --service-account-signing-key-file=/var/lib/kubernetes/pki/service-account.key \
            --service-account-issuer=https://{{ LOADBALANCER }}:6443 \
            --service-cluster-ip-range={{ service_cidr }} \
            --service-node-port-range=30000-32767 \
            --tls-cert-file=/var/lib/kubernetes/pki/kube-apiserver.crt \
            --tls-private-key-file=/var/lib/kubernetes/pki/kube-apiserver.key \
            --v=2
          Restart=on-failure
          RestartSec=5

          [Install]
          WantedBy=multi-user.target

    - name: Move kube-controller-manager kubeconfig
      copy:
        src: /home/pawel/kube-controller-manager.kubeconfig
        dest: /var/lib/kubernetes/

    - name: Create kube-controller-manager systemd service file
      copy:
        dest: /etc/systemd/system/kube-controller-manager.service
        content: |
          [Unit]
          Description=Kubernetes Controller Manager
          Documentation=https://github.com/kubernetes/kubernetes

          [Service]
          ExecStart=/usr/local/bin/kube-controller-manager \
            --allocate-node-cidrs=true \
            --authentication-kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \
            --authorization-kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \
            --bind-address=127.0.0.1 \
            --client-ca-file=/var/lib/kubernetes/pki/ca.crt \
            --cluster-cidr={{ pod_cidr }} \
            --cluster-name=kubernetes \
            --cluster-signing-cert-file=/var/lib/kubernetes/pki/ca.crt \
            --cluster-signing-key-file=/var/lib/kubernetes/pki/ca.key \
            --controllers=*,bootstrapsigner,tokencleaner \
            --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig \
            --leader-elect=true \
            --node-cidr-mask-size=24 \
            --requestheader-client-ca-file=/var/lib/kubernetes/pki/ca.crt \
            --root-ca-file=/var/lib/kubernetes/pki/ca.crt \
            --service-account-private-key-file=/var/lib/kubernetes/pki/service-account.key \
            --service-cluster-ip-range={{ service_cidr }} \
            --use-service-account-credentials=true \
            --v=2
          Restart=on-failure
          RestartSec=5

          [Install]
          WantedBy=multi-user.target

    - name: Move kube-scheduler kubeconfig
      copy:
        src: /home/pawel/kube-scheduler.kubeconfig
        dest: /var/lib/kubernetes/

    - name: Create kube-scheduler systemd service file
      copy:
        dest: /etc/systemd/system/kube-scheduler.service
        content: |
          [Unit]
          Description=Kubernetes Scheduler
          Documentation=https://github.com/kubernetes/kubernetes

          [Service]
          ExecStart=/usr/local/bin/kube-scheduler \
            --kubeconfig=/var/lib/kubernetes/kube-scheduler.kubeconfig \
            --leader-elect=true \
            --v=2
          Restart=on-failure
          RestartSec=5

          [Install]
          WantedBy=multi-user.target

    - name: Start Kubernetes control plane services
      shell: |
        sudo systemctl daemon-reload
        sudo systemctl enable kube-apiserver kube-controller-manager kube-scheduler
        sudo systemctl start kube-apiserver kube-controller-manager kube-scheduler

