---
- name: Generate Kubernetes Configuration Files for Authentication
  hosts: master-1
  vars:
    loadbalancer_ip: "{{ lookup('pipe', 'dig +short loadbalancer') }}"
    services:
      - { name: "kube-proxy", client_cert: "kube-proxy.crt", client_key: "kube-proxy.key", server: "{{ loadbalancer_ip }}" }
      - { name: "kube-controller-manager", client_cert: "kube-controller-manager.crt", client_key: "kube-controller-manager.key", server: "127.0.0.1" }
      - { name: "kube-scheduler", client_cert: "kube-scheduler.crt", client_key: "kube-scheduler.key", server: "127.0.0.1" }
    admin_service:
      name: "admin"
      client_cert: "admin.crt"
      client_key: "admin.key"
      server: "127.0.0.1"

  tasks:
    - name: Set cluster for each service
      command: >
        kubectl config set-cluster c-serv-k8s
        --certificate-authority=/var/lib/kubernetes/pki/ca.crt
        --server=https://{{ item.server }}:6443
        --kubeconfig={{ item.name }}.kubeconfig
      with_items: "{{ services }}"

    - name: Set credentials for each service
      command: >
        kubectl config set-credentials system:{{ item.name }}
        --client-certificate=/var/lib/kubernetes/pki/{{ item.client_cert }}
        --client-key=/var/lib/kubernetes/pki/{{ item.client_key }}
        --kubeconfig={{ item.name }}.kubeconfig
      with_items: "{{ services }}"

    - name: Set context for each service
      command: >
        kubectl config set-context default
        --cluster=c-serv-k8s
        --user=system:{{ item.name }}
        --kubeconfig={{ item.name }}.kubeconfig
      with_items: "{{ services }}"

    - name: Use context for each service
      command: kubectl config use-context default --kubeconfig={{ item.name }}.kubeconfig
      with_items: "{{ services }}"

    - name: Set cluster for admin
      command: >
        kubectl config set-cluster c-serv-k8s
        --certificate-authority=ca.crt
        --embed-certs=true
        --server=https://{{ admin_service.server }}:6443
        --kubeconfig={{ admin_service.name }}.kubeconfig

    - name: Set credentials for admin
      command: >
        kubectl config set-credentials {{ admin_service.name }}
        --client-certificate=admin.crt
        --client-key=admin.key
        --embed-certs=true
        --kubeconfig={{ admin_service.name }}.kubeconfig

    - name: Set context for admin
      command: >
        kubectl config set-context default
        --cluster=c-serv-k8s
        --user={{ admin_service.name }}
        --kubeconfig={{ admin_service.name }}.kubeconfig

    - name: Use context for admin
      command: kubectl config use-context default --kubeconfig={{ admin_service.name }}.kubeconfig

- name: Copy kube-proxy to workers
  hosts: workers
  become: yes
  tasks:
    - name: Copy kube-proxy.kubeconfig to worker nodes
      ansible.builtin.copy:
          src: /home/pawel/kube-proxy.kubeconfig
          dest: ~/kube-proxy.kubeconfig

- name: Copy kubeconfigs to master nodes
  hosts: masters
  become: yes
  tasks:
    - name: Copy *.kubeconfig to master nodes
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - { src: '/home/pawel/admin.kubeconfig', dest: '/home/pawel/admin.kubeconfig' }
        - { src: '/home/pawel/kube-controller-manager.kubeconfig', dest: '/home/pawel/kube-controller-manager.kubeconfig' }
        - { src: '/home/pawel/kube-scheduler.kubeconfig', dest: '/home/pawel/kube-scheduler.kubeconfig' }
