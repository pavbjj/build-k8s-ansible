---
- name: Kubernetes TLS Bootstrapping for Worker Nodes
  hosts: master-1
  become: yes
  tasks:

    - name: Set expiration date for the bootstrap token
      shell: "date -u --date '+7 days' +'%%Y-%%m-%%dT%%H:%%M:%%SZ'"
      register: expiration_date

    - name: Create bootstrap token YAML file
      copy:
        dest: /tmp/bootstrap-token.yaml
        content: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: bootstrap-token-07401b
            namespace: kube-system
          type: bootstrap.kubernetes.io/token
          stringData:
            description: "The default bootstrap token generated by 'kubeadm init'."
            token-id: 07401b
            token-secret: f395accd246ae52d
            expiration: {{ expiration_date.stdout }}
            usage-bootstrap-authentication: "true"
            usage-bootstrap-signing: "true"
            auth-extra-groups: system:bootstrappers:worker

    - name: Apply bootstrap token configuration
      command: kubectl create -f /tmp/bootstrap-token.yaml --kubeconfig /home/pawel/admin.kubeconfig

    - name: Create ClusterRoleBinding for CSR creation
      copy:
        dest: /tmp/csrs-for-bootstrapping.yaml
        content: |
          kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: create-csrs-for-bootstrapping
          subjects:
          - kind: Group
            name: system:bootstrappers
            apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: system:node-bootstrapper
            apiGroup: rbac.authorization.k8s.io

    - name: Apply ClusterRoleBinding for CSR creation
      command: kubectl create -f /tmp/csrs-for-bootstrapping.yaml --kubeconfig /home/pawel/admin.kubeconfig

    - name: Create ClusterRoleBinding for auto-approving node CSRs
      copy:
        dest: /tmp/auto-approve-csrs-for-group.yaml
        content: |
          kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: auto-approve-csrs-for-group
          subjects:
          - kind: Group
            name: system:bootstrappers
            apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
            apiGroup: rbac.authorization.k8s.io

    - name: Apply auto-approve ClusterRoleBinding
      command: kubectl create -f /tmp/auto-approve-csrs-for-group.yaml --kubeconfig /home/pawel/admin.kubeconfig

    - name: Create ClusterRoleBinding for auto-renewals
      copy:
        dest: /tmp/auto-approve-renewals.yaml
        content: |
          kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: auto-approve-renewals-for-nodes
          subjects:
          - kind: Group
            name: system:nodes
            apiGroup: rbac.authorization.k8s.io
          roleRef:
            kind: ClusterRole
            name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
            apiGroup: rbac.authorization.k8s.io

    - name: Apply auto-renewal ClusterRoleBinding
      command: kubectl create -f /tmp/auto-approve-renewals.yaml --kubeconfig /home/pawel/admin.kubeconfig

- name: Configure Worker Nodes for TLS Bootstrapping
  hosts: workers
  become: yes
  tasks:

    - name: Create required directories for Kubernetes binaries and certificates
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - /var/lib/kubelet/pki
        - /var/lib/kube-proxy
        - /var/lib/kubernetes/pki
        - /var/run/kubernetes

    - name: Download Kubernetes worker binaries
      get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/v1.24.3/bin/linux/amd64/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        mode: '0755'
      loop:
        - kubectl
        - kube-proxy
        - kubelet

    - name: Move CA certificates to appropriate location
      copy:
        src: /tmp/ca.crt
        dest: /var/lib/kubernetes/pki/ca.crt
        owner: root
        group: root
        mode: '0600'

    - name: Create bootstrap kubeconfig for worker nodes
      copy:
        dest: /var/lib/kubelet/bootstrap-kubeconfig
        content: |
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority: /var/lib/kubernetes/pki/ca.crt
              server: https://10.171.176.130:6443
            name: bootstrap
          contexts:
          - context:
              cluster: bootstrap
              user: kubelet-bootstrap
            name: bootstrap
          current-context: bootstrap
          kind: Config
          preferences: {}
          users:
          - name: kubelet-bootstrap
            user:
              token: 07401b.f395accd246ae52d

