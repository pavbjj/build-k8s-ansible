---
- name: Setup containerd, CNI plugins, and runc on worker instances
  hosts: worker-1,worker-2
  become: yes
  tasks:
    - name: Set versions for containerd, CNI plugins, and runc
      set_fact:
        containerd_version: "1.5.9"
        cni_version: "0.8.6"
        runc_version: "1.1.1"

    - name: Download containerd, CNI plugins, and runc
      ansible.builtin.get_url:
        url: "{{ item.url }}"
        dest: "/tmp/{{ item.filename }}"
      with_items:
        - { url: "https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz", filename: "containerd-{{ containerd_version }}-linux-amd64.tar.gz" }
        - { url: "https://github.com/containernetworking/plugins/releases/download/v{{ cni_version }}/cni-plugins-linux-amd64-v{{ cni_version }}.tgz", filename: "cni-plugins-linux-amd64-v{{ cni_version }}.tgz" }
        - { url: "https://github.com/opencontainers/runc/releases/download/v{{ runc_version }}/runc.amd64", filename: "runc.amd64" }

    - name: Ensure /opt/cni/bin directory exists
      ansible.builtin.file:
        path: /opt/cni/bin
        state: directory
        mode: '0755'

    - name: Install runc
      ansible.builtin.copy:
        src: /tmp/runc.amd64
        dest: /usr/local/bin/runc
        remote_src: yes
        mode: '0755'

    - name: Extract and install containerd
      ansible.builtin.unarchive:
        src: "/tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz"
        dest: /usr/local
        remote_src: yes

    - name: Extract and install CNI plugins
      ansible.builtin.unarchive:
        src: "/tmp/cni-plugins-linux-amd64-v{{ cni_version }}.tgz"
        dest: /opt/cni/bin
        remote_src: yes

    - name: Create containerd service unit file
      ansible.builtin.copy:
        dest: /etc/systemd/system/containerd.service
        content: |
          [Unit]
          Description=containerd container runtime
          Documentation=https://containerd.io
          After=network.target local-fs.target

          [Service]
          ExecStartPre=-/sbin/modprobe overlay
          ExecStart=/usr/local/bin/containerd

          Type=notify
          Delegate=yes
          KillMode=process
          Restart=always
          RestartSec=5
          LimitNPROC=infinity
          LimitCORE=infinity
          LimitNOFILE=infinity
          TasksMax=infinity
          OOMScoreAdjust=-999

          [Install]
          WantedBy=multi-user.target

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start containerd
      ansible.builtin.systemd:
        name: containerd
        enabled: yes
        state: started

